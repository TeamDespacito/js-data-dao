{"version":3,"sources":["src/config/app-config.js","src/config/app-config.ts"],"names":["AppConfig","constructor","_mainCompany","process","env","MAIN_COMPANY","_isProd","NODE_ENV","_cryptoAlgorithm","CRYPTO_ALGORITHM","_cryptoPassword","CRYPTO_PASSWORD","_expirationDays","Number","parseInt","EXPIRATION_DAYS","_usersTable","USERS_TABLE","_jwtConfig","strategy","secret","APP_JWT_SECRET","session","APP_JWT_SESSION","getMainCompany","getIsProd","getCryptoAlgorithm","getCryptoPassword","getExpirationDays","getUsersTable","getJwtConfig","exports"],"mappings":"AAAA;ACAA;;;;;AAIA,MAAAA,SAAA,CAAA;AASIC,kBAAA;AACI,aAAKC,YAAL,GAAoBC,QAAQC,GAAR,CAAYC,YAAhC;AACA,aAAKC,OAAL,GAAgBH,QAAQC,GAAR,CAAYG,QAAZ,KAAyB,YAAzC;AACA,aAAKC,gBAAL,GAAwBL,QAAQC,GAAR,CAAYK,gBAAZ,IAAgC,QAAxD;AACA,aAAKC,eAAL,GAAuBP,QAAQC,GAAR,CAAYO,eAAnC;AACA,aAAKC,eAAL,GAAuBC,OAAOC,QAAP,CAAgBX,QAAQC,GAAR,CAAYW,eAA5B,EAA6C,EAA7C,KAAoD,CAA3E;AACA,aAAKC,WAAL,GAAmBb,QAAQC,GAAR,CAAYa,WAAZ,IAA2B,OAA9C;AACA,aAAKC,UAAL,GAAkB;AACdC,sBAAU,KADI;AAEdC,oBAAQjB,QAAQC,GAAR,CAAYiB,cAFN;AAGdC,qBAAS,EAAEA,SAAUnB,QAAQC,GAAR,CAAYmB,eAAZ,IAA+B,KAA3C;AAHK,SAAlB;AAKH;AAEDC,qBAAc;AACV,eAAO,KAAKtB,YAAZ;AACH;AAEDuB,gBAAS;AACL,eAAO,KAAKnB,OAAZ;AACH;AAEDoB,yBAAkB;AACd,eAAO,KAAKlB,gBAAZ;AACH;AAEDmB,wBAAiB;AACb,eAAO,KAAKjB,eAAZ;AACH;AAEDkB,wBAAiB;AACb,eAAO,KAAKhB,eAAZ;AACH;AAEDiB,oBAAa;AACT,eAAO,KAAKb,WAAZ;AACH;AAEDc,mBAAY;AACR,eAAO,KAAKZ,UAAZ;AACH;AAjDL;AAAaa,QAAA/B,SAAA,GAASA,SAAT","file":"app-config.js","sourcesContent":["\"use strict\";\n/**\n * This class have all application config\n * If necessary add more configuration, please inherit the class and add more config\n */\nclass AppConfig {\n    constructor() {\n        this._mainCompany = process.env.MAIN_COMPANY;\n        this._isProd = (process.env.NODE_ENV === 'production');\n        this._cryptoAlgorithm = process.env.CRYPTO_ALGORITHM || 'aes192';\n        this._cryptoPassword = process.env.CRYPTO_PASSWORD;\n        this._expirationDays = Number.parseInt(process.env.EXPIRATION_DAYS, 10) || 3;\n        this._usersTable = process.env.USERS_TABLE || 'users';\n        this._jwtConfig = {\n            strategy: 'jwt',\n            secret: process.env.APP_JWT_SECRET,\n            session: { session: (process.env.APP_JWT_SESSION || false) }\n        };\n    }\n    getMainCompany() {\n        return this._mainCompany;\n    }\n    getIsProd() {\n        return this._isProd;\n    }\n    getCryptoAlgorithm() {\n        return this._cryptoAlgorithm;\n    }\n    getCryptoPassword() {\n        return this._cryptoPassword;\n    }\n    getExpirationDays() {\n        return this._expirationDays;\n    }\n    getUsersTable() {\n        return this._usersTable;\n    }\n    getJwtConfig() {\n        return this._jwtConfig;\n    }\n}\nexports.AppConfig = AppConfig;\n","/**\n * This class have all application config\n * If necessary add more configuration, please inherit the class and add more config\n */\nexport class AppConfig {\n    private _mainCompany: string\n    private _isProd: boolean\n    private _cryptoAlgorithm: string\n    private _cryptoPassword: string\n    private _expirationDays: number\n    private _jwtConfig: any\n    private _usersTable: string\n\n    constructor() {\n        this._mainCompany = process.env.MAIN_COMPANY\n        this._isProd = (process.env.NODE_ENV === 'production')\n        this._cryptoAlgorithm = process.env.CRYPTO_ALGORITHM || 'aes192'\n        this._cryptoPassword = process.env.CRYPTO_PASSWORD\n        this._expirationDays = Number.parseInt(process.env.EXPIRATION_DAYS, 10) || 3\n        this._usersTable = process.env.USERS_TABLE || 'users'\n        this._jwtConfig = {\n            strategy: 'jwt',\n            secret: process.env.APP_JWT_SECRET,\n            session: { session: (process.env.APP_JWT_SESSION || false as boolean) }\n        }\n    }\n\n    getMainCompany(): string {\n        return this._mainCompany\n    }\n\n    getIsProd(): boolean {\n        return this._isProd\n    }\n\n    getCryptoAlgorithm(): string {\n        return this._cryptoAlgorithm\n    }\n\n    getCryptoPassword(): string {\n        return this._cryptoPassword\n    }\n\n    getExpirationDays(): number {\n        return this._expirationDays\n    }\n\n    getUsersTable(): string {\n        return this._usersTable\n    }\n\n    getJwtConfig(): any {\n        return this._jwtConfig\n    }\n}"]}