{"version":3,"sources":["src/routes/forgot-router.js","src/routes/forgot-router.ts"],"names":["express_1","require","controllers_1","base_router_1","ForgotRouter","BaseRouter","constructor","store","appConfig","mailConfig","controller","ForgotController","router","Router","routers","ctrl","get","req","res","next","respond","validaToken","post","resetPassword","getRouter","exports"],"mappings":"AAAA;;ACEA,MAAAA,YAAAC,QAAwD,SAAxD,CAAA;AACA,MAAAC,gBAAAD,QAAiC,gBAAjC,CAAA;AACA,MAAAE,gBAAAF,QAA2B,eAA3B,CAAA;AAGA,MAAAG,YAAA,SAAkCD,cAAAE,UAAlC,CAA4C;AAKxCC,gBAAaC,KAAb,EAA+BC,SAA/B,EAAqDC,UAArD,EAA2E;AACvE;AACA,aAAKC,UAAL,GAAkB,IAAIR,cAAAS,gBAAJ,CAAqBJ,KAArB,EAA4BE,UAA5B,EAAwCD,SAAxC,CAAlB;AACA,aAAKD,KAAL,GAAaA,KAAb;AACA,aAAKK,MAAL,GAAcZ,UAAAa,MAAA,EAAd;AACA,aAAKC,OAAL;AACH;AAEMA,cAAO;AACV,YAAIC,OAAO,IAAX;AACA,aAAKH,MAAL,CAAYI,GAAZ,CAAgB,SAAhB,EAA2B,CAACC,GAAD,EAAeC,GAAf,EAA8BC,IAA9B,KACvB,KAAKC,OAAL,CAAaL,KAAKL,UAAL,CAAgBW,WAAhB,CAA4BJ,GAA5B,EAAiCC,GAAjC,EAAsCC,IAAtC,CAAb,EAA0DD,GAA1D,CADJ;AAGA,aAAKN,MAAL,CAAYU,IAAZ,CAAiB,SAAjB,EAA4B,CAACL,GAAD,EAAeC,GAAf,EAA8BC,IAA9B,KACxB,KAAKC,OAAL,CAAaL,KAAKL,UAAL,CAAgBa,aAAhB,CAA8BN,GAA9B,EAAmCC,GAAnC,EAAwCC,IAAxC,CAAb,EAA4DD,GAA5D,CADJ;AAEH;AAEMM,gBAAS;AACZ,eAAO,KAAKZ,MAAZ;AACH;AAxBuC;AAA/Ba,QAAArB,YAAA,GAAYA,YAAZ","file":"forgot-router.js","sourcesContent":["\"use strict\";\nconst express_1 = require('express');\nconst controllers_1 = require('../controllers');\nconst base_router_1 = require('./base-router');\nclass ForgotRouter extends base_router_1.BaseRouter {\n    constructor(store, appConfig, mailConfig) {\n        super();\n        this.controller = new controllers_1.ForgotController(store, mailConfig, appConfig);\n        this.store = store;\n        this.router = express_1.Router();\n        this.routers();\n    }\n    routers() {\n        let ctrl = this;\n        this.router.get('/:token', (req, res, next) => this.respond(ctrl.controller.validaToken(req, res, next), res));\n        this.router.post('/:token', (req, res, next) => this.respond(ctrl.controller.resetPassword(req, res, next), res));\n    }\n    getRouter() {\n        return this.router;\n    }\n}\nexports.ForgotRouter = ForgotRouter;\n","import { MailConfig } from '../config/mail-config'\nimport { AppConfig } from '../config/app-config'\nimport { Request, Response, Router, NextFunction } from 'express'\nimport { ForgotController } from '../controllers'\nimport { BaseRouter } from './base-router'\nimport * as JSData from 'js-data'\n\nexport class ForgotRouter extends BaseRouter {\n    controller: ForgotController\n    store: JSData.DS\n    router: Router\n\n    constructor (store: JSData.DS, appConfig: AppConfig, mailConfig: MailConfig) {\n        super()\n        this.controller = new ForgotController(store, mailConfig, appConfig)\n        this.store = store\n        this.router = Router()\n        this.routers()\n    }\n\n    public routers() {\n        let ctrl = this\n        this.router.get('/:token', (req: Request, res: Response, next: NextFunction) =>\n            this.respond(ctrl.controller.validaToken(req, res, next), res))\n\n        this.router.post('/:token', (req: Request, res: Response, next: NextFunction) =>\n            this.respond(ctrl.controller.resetPassword(req, res, next), res))\n    }\n\n    public getRouter(): Router {\n        return this.router\n    }\n}\n"]}